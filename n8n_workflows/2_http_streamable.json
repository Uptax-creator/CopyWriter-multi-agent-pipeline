{
  "name": "Omie MCP HTTP Streamable - Moderno",
  "active": true,
  "nodes": [
    {
      "parameters": {
        "path": "mcp-webhook",
        "options": {
          "responseMode": "responseNode",
          "responseHeaders": {
            "Access-Control-Allow-Origin": "*",
            "Content-Type": "application/json"
          }
        }
      },
      "name": "Webhook",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        200,
        300
      ],
      "webhookId": "omie-mcp-http-streamable"
    },
    {
      "parameters": {
        "url": "http://localhost:3000/mcp/tools/={{ $json.body.tool_name }}",
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "={{ $json.body.arguments }}",
        "options": {
          "headers": {
            "Content-Type": "application/json",
            "Accept": "application/json",
            "User-Agent": "n8n-mcp-client/1.0"
          },
          "timeout": 30000,
          "retry": {
            "enabled": true,
            "maxRetries": 3,
            "retryDelay": 1000
          }
        }
      },
      "name": "HTTP Request to MCP",
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4,
      "position": [
        450,
        300
      ]
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "leftValue": "={{ $json.content }}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty"
              }
            }
          ],
          "combinator": "and"
        }
      },
      "name": "Check Response",
      "type": "n8n-nodes-base.if",
      "typeVersion": 2,
      "position": [
        700,
        300
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": true, \"data\": $json.content[0].text, \"timestamp\": $now, \"tool_name\": $('Webhook').item.json.body.tool_name } }}",
        "options": {
          "responseHeaders": {
            "Content-Type": "application/json",
            "Access-Control-Allow-Origin": "*"
          }
        }
      },
      "name": "Success Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        950,
        200
      ]
    },
    {
      "parameters": {
        "respondWith": "json",
        "responseBody": "={{ { \"success\": false, \"error\": \"Tool execution failed\", \"timestamp\": $now } }}",
        "options": {
          "responseHeaders": {
            "Content-Type": "application/json",
            "Access-Control-Allow-Origin": "*"
          },
          "responseCode": 500
        }
      },
      "name": "Error Response",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [
        950,
        400
      ]
    }
  ],
  "connections": {
    "Webhook": {
      "main": [
        [
          {
            "node": "HTTP Request to MCP",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request to MCP": {
      "main": [
        [
          {
            "node": "Check Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check Response": {
      "main": [
        [
          {
            "node": "Success Response",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Error Response",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}
